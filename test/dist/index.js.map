{"version":3,"file":"index.js","sources":["../../node_modules/zora/dist/zora.es.js","../../src/slice.js","../slice.js","../../node_modules/smart-table-operators/index.js","../../node_modules/smart-table-json-pointer/index.js","../../node_modules/smart-table-sort/index.js","../../node_modules/smart-table-filter/index.js","../../node_modules/smart-table-search/index.js","../../node_modules/smart-table-events/index.js","../../src/events.js","../../src/directives/table.js","../../src/table.js","../table.js","../../src/directives/filter.js","../directives/filter.js","../../src/directives/search.js","../directives/search.js","../../src/directives/slice.js","../directives/slice.js","../../src/directives/sort.js","../directives/sort.js","../../src/directives/summary.js","../directives/summary.js","../../src/directives/workingIndicator.js","../directives/workingIndicator.js","../directives/table.js","../index.js"],"sourcesContent":["/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nvar index = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1);\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar keys = createCommonjsModule(function (module, exports) {\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n});\n\nvar is_arguments = createCommonjsModule(function (module, exports) {\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n}\n});\n\nvar index$1 = createCommonjsModule(function (module) {\nvar pSlice = Array.prototype.slice;\nvar objectKeys = keys;\nvar isArguments = is_arguments;\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n});\n\nconst assertions = {\n  ok(val, message = 'should be truthy') {\n    const assertionResult = {\n      pass: Boolean(val),\n      expected: 'truthy',\n      actual: val,\n      operator: 'ok',\n      message\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  deepEqual(actual, expected, message = 'should be equivalent') {\n    const assertionResult = {\n      pass: index$1(actual, expected),\n      actual,\n      expected,\n      message,\n      operator: 'deepEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  equal(actual, expected, message = 'should be equal') {\n    const assertionResult = {\n      pass: actual === expected,\n      actual,\n      expected,\n      message,\n      operator: 'equal'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notOk(val, message = 'should not be truthy') {\n    const assertionResult = {\n      pass: !Boolean(val),\n      expected: 'falsy',\n      actual: val,\n      operator: 'notOk',\n      message\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notDeepEqual(actual, expected, message = 'should not be equivalent') {\n    const assertionResult = {\n      pass: !index$1(actual, expected),\n      actual,\n      expected,\n      message,\n      operator: 'notDeepEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notEqual(actual, expected, message = 'should not be equal') {\n    const assertionResult = {\n      pass: actual !== expected,\n      actual,\n      expected,\n      message,\n      operator: 'notEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  throws(func, expected, message) {\n    let caught, pass, actual;\n    if (typeof expected === 'string') {\n      [expected, message] = [message, expected];\n    }\n    try {\n      func();\n    } catch (error) {\n      caught = {error};\n    }\n    pass = caught !== undefined;\n    actual = caught && caught.error;\n    if (expected instanceof RegExp) {\n      pass = expected.test(actual) || expected.test(actual && actual.message);\n      expected = String(expected);\n    } else if (typeof expected === 'function' && caught) {\n      pass = actual instanceof expected;\n      actual = actual.constructor;\n    }\n    const assertionResult = {\n      pass,\n      expected,\n      actual,\n      operator: 'throws',\n      message: message || 'should throw'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  doesNotThrow(func, expected, message) {\n    let caught;\n    if (typeof expected === 'string') {\n      [expected, message] = [message, expected];\n    }\n    try {\n      func();\n    } catch (error) {\n      caught = {error};\n    }\n    const assertionResult = {\n      pass: caught === undefined,\n      expected: 'no thrown error',\n      actual: caught && caught.error,\n      operator: 'doesNotThrow',\n      message: message || 'should not throw'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  fail(reason = 'fail called') {\n    const assertionResult = {\n      pass: false,\n      actual: 'fail called',\n      expected: 'fail not called',\n      message: reason,\n      operator: 'fail'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  }\n};\n\nfunction assertion (test) {\n  return Object.create(assertions, {test: {value: test}});\n}\n\nconst Test = {\n  run: function () {\n    const assert = assertion(this);\n    const now = Date.now();\n    return index(this.coroutine(assert))\n      .then(() => {\n        return {assertions: this.assertions, executionTime: Date.now() - now};\n      });\n  },\n  addAssertion(){\n    const newAssertions = [...arguments].map(a => Object.assign({description: this.description}, a));\n    this.assertions.push(...newAssertions);\n    return this;\n  }\n};\n\nfunction test ({description, coroutine, only = false}) {\n  return Object.create(Test, {\n    description: {value: description},\n    coroutine: {value: coroutine},\n    assertions: {value: []},\n    only: {value: only},\n    length: {\n      get(){\n        return this.assertions.length\n      }\n    }\n  });\n}\n\nfunction tapOut ({pass, message, index}) {\n  const status = pass === true ? 'ok' : 'not ok';\n  console.log([status, index, message].join(' '));\n}\n\nfunction canExit () {\n  return typeof process !== 'undefined' && typeof process.exit === 'function';\n}\n\nfunction tap () {\n  return function * () {\n    let index = 1;\n    let lastId = 0;\n    let success = 0;\n    let failure = 0;\n\n    const starTime = Date.now();\n    console.log('TAP version 13');\n    try {\n      while (true) {\n        const assertion = yield;\n        if (assertion.pass === true) {\n          success++;\n        } else {\n          failure++;\n        }\n        assertion.index = index;\n        if (assertion.id !== lastId) {\n          console.log(`# ${assertion.description} - ${assertion.executionTime}ms`);\n          lastId = assertion.id;\n        }\n        tapOut(assertion);\n        if (assertion.pass !== true) {\n          console.log(`  ---\n  operator: ${assertion.operator}\n  expected: ${JSON.stringify(assertion.expected)}\n  actual: ${JSON.stringify(assertion.actual)}\n  ...`);\n        }\n        index++;\n      }\n    } catch (e) {\n      console.log('Bail out! unhandled exception');\n      console.log(e);\n      if (canExit()) {\n        process.exit(1);\n      }\n    }\n    finally {\n      const execution = Date.now() - starTime;\n      if (index > 1) {\n        console.log(`\n1..${index - 1}\n# duration ${execution}ms\n# success ${success}\n# failure ${failure}`);\n      }\n      if (failure && canExit()) {\n        process.exit(1);\n      }\n    }\n  };\n}\n\nconst Plan = {\n  test(description, coroutine, opts = {}){\n    const testItems = (!coroutine && description.tests) ? [...description] : [{description, coroutine}];\n    this.tests.push(...testItems.map(t=>test(Object.assign(t, opts))));\n    return this;\n  },\n\n  only(description, coroutine){\n    return this.test(description, coroutine, {only: true});\n  },\n\n  run(sink = tap()){\n    const sinkIterator = sink();\n    sinkIterator.next();\n    const hasOnly = this.tests.some(t=>t.only);\n    const runnable = hasOnly ? this.tests.filter(t=>t.only) : this.tests;\n    return index(function * () {\n      let id = 1;\n      try {\n        const results = runnable.map(t=>t.run());\n        for (let r of results) {\n          const {assertions, executionTime} = yield r;\n          for (let assert of assertions) {\n            sinkIterator.next(Object.assign(assert, {id, executionTime}));\n          }\n          id++;\n        }\n      }\n      catch (e) {\n        sinkIterator.throw(e);\n      } finally {\n        sinkIterator.return();\n      }\n    }.bind(this))\n  },\n\n  * [Symbol.iterator](){\n    for (let t of this.tests) {\n      yield t;\n    }\n  }\n};\n\nfunction plan () {\n  return Object.create(Plan, {\n    tests: {value: []},\n    length: {\n      get(){\n        return this.tests.length\n      }\n    }\n  });\n}\n\nexport default plan;\n","export default function sliceFactory ({page = 1, size} = {}) {\n  return function sliceFunction (array = []) {\n    const actualSize = size || array.length;\n    const offset = (page - 1) * actualSize;\n    return array.slice(offset, offset + actualSize);\n  };\n}\n","import zora from 'zora';\nimport slicer from '../src/slice';\n\nexport default zora()\n  .test('slice: get a page with specified size', function * (t) {\n    const input = [1, 2, 3, 4, 5, 6, 7];\n    const output = slicer({page: 1, size: 5})(input);\n    t.deepEqual(output, [1, 2, 3, 4, 5]);\n  })\n  .test('slice: get a partial page if size is too big', function * (t) {\n    const input = [1, 2, 3, 4, 5, 6, 7];\n    const output = slicer({page: 2, size: 5})(input);\n    t.deepEqual(output, [6, 7]);\n  })\n  .test('slice: get all the asset if no param is provided', function * (t) {\n    const input = [1, 2, 3, 4, 5, 6, 7];\n    const output = slicer()(input);\n    t.deepEqual(output, input);\n  })","export function swap (f) {\n  return (a, b) => f(b, a);\n}\n\nexport function compose (first, ...fns) {\n  return (...args) => fns.reduce((previous, current) => current(previous), first(...args));\n}\n\nexport function curry (fn, arityLeft) {\n  const arity = arityLeft || fn.length;\n  return (...args) => {\n    const argLength = args.length || 1;\n    if (arity === argLength) {\n      return fn(...args);\n    } else {\n      const func = (...moreArgs) => fn(...args, ...moreArgs);\n      return curry(func, arity - args.length);\n    }\n  };\n}\n\nexport function apply (fn) {\n  return (...args) => fn(...args);\n}\n\nexport function tap (fn) {\n  return arg => {\n    fn(arg);\n    return arg;\n  }\n}","export default function pointer (path) {\n\n  const parts = path.split('.');\n\n  function partial (obj = {}, parts = []) {\n    const p = parts.shift();\n    const current = obj[p];\n    return (current === undefined || parts.length === 0) ?\n      current : partial(current, parts);\n  }\n\n  function set (target, newTree) {\n    let current = target;\n    const [leaf, ...intermediate] = parts.reverse();\n    for (let key of intermediate.reverse()) {\n      if (current[key] === undefined) {\n        current[key] = {};\n        current = current[key];\n      }\n    }\n    current[leaf] = Object.assign(current[leaf] || {}, newTree);\n    return target;\n  }\n\n  return {\n    get(target){\n      return partial(target, [...parts])\n    },\n    set\n  }\n};\n","import {swap} from 'smart-table-operators';\nimport pointer from 'smart-table-json-pointer';\n\n\nfunction sortByProperty (prop) {\n  const propGetter = pointer(prop).get;\n  return (a, b) => {\n    const aVal = propGetter(a);\n    const bVal = propGetter(b);\n\n    if (aVal === bVal) {\n      return 0;\n    }\n\n    if (bVal === undefined) {\n      return -1;\n    }\n\n    if (aVal === undefined) {\n      return 1;\n    }\n\n    return aVal < bVal ? -1 : 1;\n  }\n}\n\nexport default function sortFactory ({pointer, direction} = {}) {\n  if (!pointer || direction === 'none') {\n    return array => [...array];\n  }\n\n  const orderFunc = sortByProperty(pointer);\n  const compareFunc = direction === 'desc' ? swap(orderFunc) : orderFunc;\n\n  return (array) => [...array].sort(compareFunc);\n}","import {compose} from 'smart-table-operators';\nimport pointer from 'smart-table-json-pointer';\n\nfunction typeExpression (type) {\n  switch (type) {\n    case 'boolean':\n      return Boolean;\n    case 'number':\n      return Number;\n    case 'date':\n      return (val) => new Date(val);\n    default:\n      return compose(String, (val) => val.toLowerCase());\n  }\n}\n\nconst operators = {\n  includes(value){\n    return (input) => input.includes(value);\n  },\n  is(value){\n    return (input) => Object.is(value, input);\n  },\n  isNot(value){\n    return (input) => !Object.is(value, input);\n  },\n  lt(value){\n    return (input) => input < value;\n  },\n  gt(value){\n    return (input) => input > value;\n  },\n  lte(value){\n    return (input) => input <= value;\n  },\n  gte(value){\n    return (input) => input >= value;\n  },\n  equals(value){\n    return (input) => value == input;\n  },\n  notEquals(value){\n    return (input) => value != input;\n  }\n};\n\nconst every = fns => (...args) => fns.every(fn => fn(...args));\n\nexport function predicate ({value = '', operator = 'includes', type = 'string'}) {\n  const typeIt = typeExpression(type);\n  const operateOnTyped = compose(typeIt, operators[operator]);\n  const predicateFunc = operateOnTyped(value);\n  return compose(typeIt, predicateFunc);\n}\n\n//avoid useless filter lookup (improve perf)\nfunction normalizeClauses (conf) {\n  const output = {};\n  const validPath = Object.keys(conf).filter(path => Array.isArray(conf[path]));\n  validPath.forEach(path => {\n    const validClauses = conf[path].filter(c => c.value !== '');\n    if (validClauses.length) {\n      output[path] = validClauses;\n    }\n  });\n  return output;\n}\n\nexport default function filter (filter) {\n  const normalizedClauses = normalizeClauses(filter);\n  const funcList = Object.keys(normalizedClauses).map(path => {\n    const getter = pointer(path).get;\n    const clauses = normalizedClauses[path].map(predicate);\n    return compose(getter, every(clauses));\n  });\n  const filterPredicate = every(funcList);\n\n  return (array) => array.filter(filterPredicate);\n}","import pointer from 'smart-table-json-pointer';\n\nexport default function (searchConf = {}) {\n  const {value, scope = []} = searchConf;\n  const searchPointers = scope.map(field => pointer(field).get);\n  if (!scope.length || !value) {\n    return array => array;\n  } else {\n    return array => array.filter(item => searchPointers.some(p => String(p(item)).includes(String(value))))\n  }\n}","export function emitter () {\n\n  const listenersLists = {};\n\n  return {\n    on(event, ...listeners){\n      listenersLists[event] = (listenersLists[event] || []).concat(listeners);\n      return this;\n    },\n    dispatch(event, ...args){\n      const listeners = listenersLists[event] || [];\n      for (let listener of listeners) {\n        listener(...args);\n      }\n      return this;\n    },\n    off(event, ...listeners){\n      if (!event) {\n        Object.keys(listenersLists).forEach(ev => this.off(ev));\n      } else {\n        const list = listenersLists[event] || [];\n        listenersLists[event] = listeners.length ? list.filter(listener => !listeners.includes(listener)) : [];\n      }\n      return this;\n    }\n  }\n}\n\nexport function proxyListener (eventMap) {\n  return function ({emitter}) {\n\n    const proxy = {};\n    let eventListeners = {};\n\n    for (let ev of Object.keys(eventMap)) {\n      const method = eventMap[ev];\n      eventListeners[ev] = [];\n      proxy[method] = function (...listeners) {\n        eventListeners[ev] = eventListeners[ev].concat(listeners);\n        emitter.on(ev, ...listeners);\n        return this;\n      };\n    }\n\n    return Object.assign(proxy, {\n      off(ev){\n        if (!ev) {\n          Object.keys(eventListeners).forEach(eventName => this.off(eventName));\n        }\n\n        if (eventListeners[ev]) {\n          emitter.off(ev, ...eventListeners[ev]);\n        }\n\n        return this;\n      }\n    });\n  }\n}","export const TOGGLE_SORT = 'TOGGLE_SORT';\nexport const DISPLAY_CHANGED = 'DISPLAY_CHANGED';\nexport const PAGE_CHANGED = 'CHANGE_PAGE';\nexport const EXEC_CHANGED = 'EXEC_STARTED';\nexport const FILTER_CHANGED = 'FILTER_CHANGED';\nexport const SUMMARY_CHANGED = 'SUMMARY_CHANGED';\nexport const SEARCH_CHANGED = 'SEARCH_CHANGED';\nexport const EXEC_ERROR = 'EXEC_ERROR';","import slice from '../slice';\nimport {curry, tap, compose} from 'smart-table-operators';\nimport pointer from 'smart-table-json-pointer';\nimport {emitter} from 'smart-table-events';\nimport sliceFactory from '../slice';\nimport {\n  SUMMARY_CHANGED,\n  TOGGLE_SORT,\n  DISPLAY_CHANGED,\n  PAGE_CHANGED,\n  EXEC_CHANGED,\n  FILTER_CHANGED,\n  SEARCH_CHANGED,\n  EXEC_ERROR\n} from '../events';\n\nfunction curriedPointer (path) {\n  const {get, set} = pointer(path);\n  return {get, set: curry(set)};\n}\n\nexport default function ({\n  sortFactory,\n  tableState,\n  data,\n  filterFactory,\n  searchFactory\n}) {\n  const table = emitter();\n  const sortPointer = curriedPointer('sort');\n  const slicePointer = curriedPointer('slice');\n  const filterPointer = curriedPointer('filter');\n  const searchPointer = curriedPointer('search');\n\n  const safeAssign = curry((base, extension) => Object.assign({}, base, extension));\n  const dispatch = curry(table.dispatch.bind(table), 2);\n\n  const createSummary = (filtered) => {\n    dispatch(SUMMARY_CHANGED, {\n      page: tableState.slice.page,\n      size: tableState.slice.size,\n      filteredCount: filtered.length\n    });\n  };\n\n  const exec = ({processingDelay = 20} = {}) => {\n    table.dispatch(EXEC_CHANGED, {working: true});\n    setTimeout(function () {\n      try {\n        const filterFunc = filterFactory(filterPointer.get(tableState));\n        const searchFunc = searchFactory(searchPointer.get(tableState));\n        const sortFunc = sortFactory(sortPointer.get(tableState));\n        const sliceFunc = sliceFactory(slicePointer.get(tableState));\n        const execFunc = compose(filterFunc, searchFunc, tap(createSummary), sortFunc, sliceFunc);\n        const displayed = execFunc(data);\n        table.dispatch(DISPLAY_CHANGED, displayed.map(d => {\n          return {index: data.indexOf(d), value: d};\n        }));\n      } catch (e) {\n        table.dispatch(EXEC_ERROR, e);\n      } finally {\n        table.dispatch(EXEC_CHANGED, {working: false});\n      }\n    }, processingDelay);\n  };\n\n  const updateTableState = curry((pter, ev, newPartialState) => compose(\n    safeAssign(pter.get(tableState)),\n    tap(dispatch(ev)),\n    pter.set(tableState)\n  )(newPartialState));\n\n  const resetToFirstPage = () => updateTableState(slicePointer, PAGE_CHANGED, {page: 1});\n\n  const tableOperation = (pter, ev) => compose(\n    updateTableState(pter, ev),\n    resetToFirstPage,\n    () => table.exec() // we wrap within a function so table.exec can be overwritten (when using with a server for example)\n  );\n\n  const api = {\n    sort: tableOperation(sortPointer, TOGGLE_SORT),\n    filter: tableOperation(filterPointer, FILTER_CHANGED),\n    search: tableOperation(searchPointer, SEARCH_CHANGED),\n    slice: compose(updateTableState(slicePointer, PAGE_CHANGED), () => table.exec()),\n    exec,\n    eval(state = tableState){\n      return Promise.resolve()\n        .then(function () {\n          const sortFunc = sortFactory(sortPointer.get(state));\n          const searchFunc = searchFactory(searchPointer.get(state));\n          const filterFunc = filterFactory(filterPointer.get(state));\n          const sliceFunc = sliceFactory(slicePointer.get(state));\n          const execFunc = compose(filterFunc, searchFunc, sortFunc, sliceFunc);\n          return execFunc(data).map(d => {\n            return {index: data.indexOf(d), value: d}\n          });\n        });\n    },\n    onDisplayChange(fn){\n      table.on(DISPLAY_CHANGED, fn);\n    },\n    getTableState(){\n      return Object.assign({}, tableState)\n    }\n  };\n\n  return Object.assign(table, api);\n}","import sort from 'smart-table-sort';\nimport filter from 'smart-table-filter';\nimport search from 'smart-table-search';\nimport table from './directives/table';\n\nexport default function ({\n  sortFactory = sort,\n  filterFactory = filter,\n  searchFactory = search,\n  tableState = {sort: {}, slice: {page: 1}, filter: {}, search: {}},\n  data = []\n}, ...tableDirectives) {\n\n  const coreTable = table({sortFactory, filterFactory, tableState, data, searchFactory});\n\n  return tableDirectives.reduce((accumulator, newdir) => {\n    return Object.assign(accumulator, newdir({\n      sortFactory,\n      filterFactory,\n      searchFactory,\n      tableState,\n      data,\n      table: coreTable\n    }));\n  }, coreTable);\n}","import  zora from 'zora';\nimport table from '../src/table';\n\nexport default zora()\n  .test('compose table factory', function * (t) {\n    const data = [];\n    const tableState = {};\n    const tableInstance = table({data, tableState}, function ({data:d, tableState:ts}) {\n      return {\n        getData(){\n          return d;\n        },\n        getTableState(){\n          return ts;\n        }\n      };\n    });\n\n    t.ok(tableInstance.getData !== undefined && tableInstance.getTableState !== undefined, 'table instance should have extended behaviour');\n    t.ok(tableInstance.exec !== undefined, 'table instance should have regular behaviour');\n    t.equal(tableInstance.getData(), data, 'all factories should have the same data reference');\n    t.equal(tableInstance.getTableState(), tableState, 'all factories should have the same table state reference');\n  });\n","import {FILTER_CHANGED} from '../events';\nimport {proxyListener} from 'smart-table-events';\n\nconst filterListener = proxyListener({[FILTER_CHANGED]: 'onFilterChange'});\n\nexport default function ({table, pointer, operator = 'includes', type = 'string'}) {\n  return Object.assign({\n      filter(input){\n        const filterConf = {\n          [pointer]: [\n            {\n              value: input,\n              operator,\n              type\n            }\n          ]\n\n        };\n        return table.filter(filterConf);\n      }\n    },\n    filterListener({emitter: table}));\n}","import filter from '../../src/directives/filter';\nimport {FILTER_CHANGED} from '../../src/events';\nimport {emitter} from 'smart-table-events';\nimport zora from 'zora';\n\nfunction fakeTable () {\n  const table = emitter();\n  table.filter = input => input;\n  return table;\n}\n\nexport default zora()\n  .test('filter directive should be able to register listener', function * (t) {\n    let counter = 0;\n    const table = fakeTable();\n    const fd = filter({table, pointer: 'foo'});\n    fd.onFilterChange(() => counter++);\n    table.dispatch(FILTER_CHANGED);\n    t.equal(counter, 1, 'should have updated the counter');\n  })\n  .test('filter directive should call table filter method passing the appropriate argument', function * (t) {\n    const table = fakeTable();\n    const fd = filter({table, pointer: 'foo.bar', operator: 'is', type: 'number'});\n    const arg = fd.filter(42);\n    t.deepEqual(arg, {'foo.bar': [{value: 42, operator: 'is', type: 'number'}]});\n  });\n\n\n","import {SEARCH_CHANGED} from '../events';\nimport {proxyListener} from 'smart-table-events';\n\nconst searchListener = proxyListener({[SEARCH_CHANGED]: 'onSearchChange'});\n\nexport default function ({table, scope = []}) {\n  return Object.assign(\n    searchListener({emitter: table}), {\n      search(input){\n        return table.search({value: input, scope});\n      }\n    });\n}","import zora from 'zora';\nimport search from '../../src/directives/search';\nimport {SEARCH_CHANGED} from '../../src/events';\nimport {emitter} from 'smart-table-events';\n\nfunction fakeTable () {\n  const table = emitter();\n  table.search = input => input;\n  return table;\n}\n\nexport default zora()\n  .test('search directive should be able to register listener', function * (t) {\n    let counter = 0;\n    const table = fakeTable();\n    const dir = search({table});\n    dir.onSearchChange(() => counter++);\n    table.dispatch(SEARCH_CHANGED);\n    t.equal(counter, 1, 'should have updated the counter');\n  })\n  .test('search directive should call table search method passing the appropriate argument', function * (t) {\n    const table = fakeTable();\n    const dir = search({table, scope: ['foo', 'bar.woot']});\n    const arg = dir.search(42);\n    t.deepEqual(arg, {value: 42, scope: ['foo', 'bar.woot']});\n  });","import {PAGE_CHANGED, SUMMARY_CHANGED} from '../events';\nimport {proxyListener} from 'smart-table-events';\n\nconst sliceListener = proxyListener({[PAGE_CHANGED]: 'onPageChange', [SUMMARY_CHANGED]: 'onSummaryChange'});\n\nexport default function ({table, size, page = 1}) {\n\n  let currentPage = page;\n  let currentSize = size;\n\n  const directive = Object.assign({\n    selectPage(p){\n      return table.slice({page: p, size: currentSize});\n    },\n    selectNextPage(){\n      return this.selectPage(currentPage + 1);\n    },\n    selectPreviousPage(){\n      return this.selectPage(currentPage - 1);\n    },\n    changePageSize(size){\n      return table.slice({page: 1, size});\n    }\n  }, sliceListener({emitter: table}));\n\n  directive.onSummaryChange(({page:p, size:s}) => {\n    currentPage = p;\n    currentSize = s;\n  });\n\n  return directive;\n}\n","import zora from 'zora';\nimport slice from '../../src/directives/slice';\nimport {PAGE_CHANGED,SUMMARY_CHANGED} from '../../src/events';\nimport {emitter} from 'smart-table-events';\n\nfunction fakeTable () {\n  const table = emitter();\n  table.slice = input => input;\n  return table;\n}\n\nexport default zora()\n  .test('slice directive should be able to register listener to PAGE_CHANGED event', function * (t) {\n    let counter = 0;\n    const table = fakeTable();\n    const dir = slice({table});\n    dir.onPageChange(() => counter++);\n    table.dispatch(PAGE_CHANGED, {size: 25, page: 1});\n    t.equal(counter, 1, 'should have updated the counter');\n  })\n  .test('slice directive should be able to register listener to SUMMARY_CHANGED event', function * (t) {\n    let counter = 0;\n    const table = fakeTable();\n    const dir = slice({table});\n    dir.onSummaryChange(() => counter++);\n    table.dispatch(SUMMARY_CHANGED, {size: 25, page: 1});\n    t.equal(counter, 1, 'should have updated the counter');\n  })\n  .test('slice directive should call table slice method with the given page', function * (t) {\n    const table = fakeTable();\n    const dir = slice({table, size: 25, page: 4});\n    const arg = dir.selectPage(2);\n    t.deepEqual(arg, {page: 2, size: 25});\n  })\n  .test('slice directive should call table slice method with the next page arguments', function * (t) {\n    const table = fakeTable();\n    const dir = slice({table, size: 21, page: 4});\n    const {page, size} = dir.selectNextPage();\n    t.equal(page, 5, 'should be the next page');\n    t.equal(size, 21, 'should keep the current page size');\n  })\n  .test('slice directive should call table slice method with the previous page arguments', function * (t) {\n    const table = fakeTable();\n    const dir = slice({table, size: 26, page: 9});\n    const {page, size} = dir.selectPreviousPage();\n    t.equal(page, 8, 'should be the previous page');\n    t.equal(size, 26, 'should keep the current page size');\n  })\n  .test('slice directive should call table slice method with the page size, returning to page one', function * (t) {\n    const table = fakeTable();\n    const dir = slice({table, size: 100, page: 3});\n    const {page, size} = dir.changePageSize(42);\n    t.equal(page, 1, 'should have returned to the first page');\n    t.equal(size, 42, 'should have change the page size');\n  });\n\n\n\n","import {TOGGLE_SORT} from '../events'\nimport {proxyListener} from 'smart-table-events';\n\nconst sortListeners = proxyListener({[TOGGLE_SORT]: 'onSortToggle'});\nconst directions = ['asc', 'desc'];\n\nexport default function ({pointer, table, cycle = false}) {\n\n  const cycleDirections = cycle === true ? ['none'].concat(directions) : [...directions].reverse();\n\n  let hit = 0;\n\n  const directive = Object.assign({\n    toggle(){\n      hit++;\n      const direction = cycleDirections[hit % cycleDirections.length];\n      return table.sort({pointer, direction});\n    }\n\n  }, sortListeners({emitter: table}));\n\n  directive.onSortToggle(({pointer:p}) => {\n    if (pointer !== p) {\n      hit = 0;\n    }\n  });\n\n  return directive;\n}","import zora from 'zora';\nimport sort from '../../src/directives/sort';\nimport {TOGGLE_SORT} from '../../src/events';\nimport {emitter} from 'smart-table-events';\n\nfunction fakeTable () {\n  const table = emitter();\n  table.sort = input => input;\n  return table;\n}\n\nexport default zora()\n  .test('sort directive should be able to register listener', function * (t) {\n    let counter = 0;\n    const table = fakeTable();\n    const dir = sort({table, pointer: 'foo.bar'});\n    dir.onSortToggle(() => counter++);\n    table.dispatch(TOGGLE_SORT, {});\n    t.equal(counter, 1, 'should have updated the counter');\n  })\n  .test('sort directive dual state mode: sequentially change sort direction', function * (t) {\n    const table = fakeTable();\n    const dir = sort({table, pointer: 'foo.bar'});\n    const arg = dir.toggle();\n    t.deepEqual(arg, {pointer: 'foo.bar', direction: 'asc'});\n    const secondArg = dir.toggle();\n    t.deepEqual(secondArg, {pointer: 'foo.bar', direction: 'desc'});\n    const thirdArg = dir.toggle();\n    t.deepEqual(thirdArg, {pointer: 'foo.bar', direction: 'asc'});\n  })\n  .test('sort directive cycle mode: sequentially change sort direction', function * (t) {\n    const table = fakeTable();\n    const dir = sort({table, pointer: 'foo.bar', cycle: true});\n    const arg = dir.toggle();\n    t.deepEqual(arg, {pointer: 'foo.bar', direction: 'asc'});\n    const secondArg = dir.toggle();\n    t.deepEqual(secondArg, {pointer: 'foo.bar', direction: 'desc'});\n    const thirdArg = dir.toggle();\n    t.deepEqual(thirdArg, {pointer: 'foo.bar', direction: 'none'});\n    const fourthArg = dir.toggle();\n    t.deepEqual(fourthArg, {pointer: 'foo.bar', direction: 'asc'});\n  })\n  .test('a directive should reset when it is not concerned by the toggle', function * (t) {\n    const table = fakeTable();\n    const dir = sort({table, pointer: 'foo.bar'});\n    const arg = dir.toggle();\n    t.deepEqual(arg, {pointer: 'foo.bar', direction: 'asc'});\n    table.dispatch(TOGGLE_SORT, {pointer: 'woot.woot'})\n    const secondArg = dir.toggle();\n    t.deepEqual(secondArg, {pointer: 'foo.bar', direction: 'asc'});\n  })\n;","import {SUMMARY_CHANGED} from '../events';\nimport {proxyListener} from 'smart-table-events';\n\nconst executionListener = proxyListener({[SUMMARY_CHANGED]: 'onSummaryChange'});\n\nexport default function ({table}) {\n  return executionListener({emitter: table});\n}\n","import summary from '../../src/directives/summary';\nimport {SUMMARY_CHANGED} from '../../src/events';\nimport {emitter} from 'smart-table-events';\n\nimport zora from 'zora';\n\nexport default zora()\n  .test('summary directive should be able to register listener', function * (t) {\n    let counter = 0;\n    const table = emitter();\n    const s = summary({table});\n    s.onSummaryChange(() => counter++);\n    table.dispatch(SUMMARY_CHANGED);\n    t.equal(counter, 1, 'should have updated the counter');\n  });\n\n\n","import {EXEC_CHANGED} from '../events';\nimport {proxyListener} from 'smart-table-events';\n\nconst executionListener = proxyListener({[EXEC_CHANGED]: 'onExecutionChange'});\n\nexport default function ({table}) {\n  return executionListener({emitter: table});\n}\n","import workingIndicator from '../../src/directives/workingIndicator';\nimport {EXEC_CHANGED} from '../../src/events';\nimport {emitter} from 'smart-table-events';\nimport zora from 'zora';\n\nexport default zora()\n  .test('summary directive should be able to register listener', function * (t) {\n    let counter = 0;\n    const table = emitter();\n    const s = workingIndicator({table});\n    s.onExecutionChange(() => counter++);\n    table.dispatch(EXEC_CHANGED);\n    t.equal(counter, 1, 'should have updated the counter');\n  });\n\n\n","import zora from 'zora';\nimport tableFactory from '../../src/table';\nimport {\n  TOGGLE_SORT,\n  PAGE_CHANGED,\n  FILTER_CHANGED,\n  SUMMARY_CHANGED,\n  SEARCH_CHANGED,\n  DISPLAY_CHANGED,\n  EXEC_CHANGED\n} from '../../src/events'\n\nfunction wait (time) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve('finished');\n    }, time)\n  });\n}\n\nexport default zora()\n  .test('table directive: should be able to register listener on display change', function * (t) {\n    let displayed = null;\n    const table = tableFactory({});\n    table.onDisplayChange((args) => displayed = args);\n    table.dispatch(DISPLAY_CHANGED, 'foo');\n    t.equal(displayed, 'foo');\n  })\n  .test('table directive: sort should dispatch the mutated sort state', function * (t) {\n    let sortState = null;\n    let sliceState = null;\n    const table = tableFactory({});\n    table.on(TOGGLE_SORT, arg => sortState = arg);\n    table.on(PAGE_CHANGED, arg => sliceState = arg);\n    const newState = {direction: 'asc', pointer: 'foo.bar'};\n    table.sort(newState);\n    t.deepEqual(sortState, newState);\n    t.deepEqual(sliceState, {page: 1}, 'should have reset to first page');\n  })\n  .test('table directive: sort should trigger an execution with the new state', function * (t) {\n    const table = tableFactory({}, function ({tableState}) {\n      return {\n        exec(){\n          return tableState;\n        }\n      };\n    });\n    const newState = table.sort({direction: 'asc', pointer: 'foo.bar'});\n    t.deepEqual(newState, {slice: {page: 1}, filter: {}, search: {}, sort: {direction: 'asc', pointer: 'foo.bar'}});\n  })\n  .test('table directive: slice should dispatch the mutated slice state', function * (t) {\n    let sliceState = null;\n    const table = tableFactory({});\n    table.on(PAGE_CHANGED, arg => sliceState = arg);\n    const newState = {page: 7, size: 25};\n    table.slice(newState);\n    t.deepEqual(sliceState, newState);\n  })\n  .test('table directive: slice should trigger an execution with the new state', function * (t) {\n    const table = tableFactory({}, function ({tableState}) {\n      return {\n        exec(){\n          return tableState;\n        }\n      };\n    });\n    const newState = table.slice({page: 4, size: 12});\n    t.deepEqual(newState, {\"sort\": {}, \"slice\": {\"page\": 4, \"size\": 12}, \"filter\": {}, \"search\": {}});\n  })\n  .test('table directive: filter should dispatch the mutated filter state', function * (t) {\n    let filterState = null;\n    let sliceState = null;\n    const table = tableFactory({});\n    table.on(FILTER_CHANGED, arg => filterState = arg);\n    table.on(PAGE_CHANGED, arg => sliceState = arg);\n    const newState = {foo: [{value: 'bar'}]};\n    table.filter(newState);\n    t.deepEqual(filterState, newState);\n    t.deepEqual(sliceState, {page: 1}, 'should have reset the page');\n  })\n  .test('table directive: filter should trigger an execution with the new state', function * (t) {\n    const table = tableFactory({}, function ({tableState}) {\n      return {\n        exec(){\n          return tableState;\n        }\n      };\n    });\n    const newState = table.filter({foo: [{value: 'bar'}]});\n    t.deepEqual(newState, {\"sort\": {}, \"slice\": {\"page\": 1}, \"filter\": {\"foo\": [{\"value\": \"bar\"}]}, \"search\": {}}\n    );\n  })\n  .test('table directive: search should dispatch the mutated search state', function * (t) {\n    let searchState = null;\n    let sliceState = null;\n    const table = tableFactory({});\n    table.on(SEARCH_CHANGED, arg => searchState = arg);\n    table.on(PAGE_CHANGED, arg => sliceState = arg);\n    const newState = {value: 'foo'};\n    table.search(newState);\n    t.deepEqual(searchState, newState);\n    t.deepEqual(sliceState, {page: 1}, 'should have reset to the first page');\n  })\n  .test('table directive: search should trigger an execution with the new state', function * (t) {\n    const table = tableFactory({}, function ({tableState}) {\n      return {\n        exec(){\n          return tableState;\n        }\n      };\n    });\n    const newState = table.search({value: 'bar'});\n    t.deepEqual(newState, {\"sort\": {}, \"slice\": {\"page\": 1}, \"filter\": {}, \"search\": {\"value\": \"bar\"}});\n  })\n  .test('table directive: eval should return the displayed collection based on table state by default', function * (t) {\n    const tableState = {\n      sort: {pointer: 'id', direction: 'desc'},\n      search: {},\n      filter: {},\n      slice: {page: 1, size: 2}\n    };\n    const table = tableFactory({\n      data: [\n        {id: 1, name: 'foo'},\n        {id: 2, name: 'blah'},\n        {id: 3, name: 'bip'}\n      ],\n      tableState\n    });\n    const output = yield table.eval();\n    t.deepEqual(output, [\n      {\"index\": 2, \"value\": {\"id\": 3, \"name\": \"bip\"}},\n      {\"index\": 1, \"value\": {\"id\": 2, \"name\": \"blah\"}}\n    ]);\n\n    //table state has mutated !\n    tableState.slice = {page: 2, size: 2};\n    const outputBis = yield table.eval();\n    t.deepEqual(outputBis, [{\"index\": 0, \"value\": {\"id\": 1, \"name\": \"foo\"}}]);\n  })\n  .test('table directive: eval should be able to take any state as input', function * (t) {\n    const tableState = {\n      sort: {pointer: 'id', direction: 'desc'},\n      search: {},\n      filter: {},\n      slice: {page: 1, size: 2}\n    };\n    const table = tableFactory({\n      data: [\n        {id: 1, name: 'foo'},\n        {id: 2, name: 'blah'},\n        {id: 3, name: 'bip'}\n      ],\n      tableState\n    });\n    const output = yield table.eval({sort: {}, slice: {}, filter: {}, search: {}});\n    t.deepEqual(output, [\n      {\"index\": 0, \"value\": {\"id\": 1, \"name\": \"foo\"}},\n      {\"index\": 1, \"value\": {\"id\": 2, \"name\": \"blah\"}},\n      {\"index\": 2, \"value\": {\"id\": 3, \"name\": \"bip\"}}\n    ]);\n  })\n  .test('table directive: eval should not dispatch any event', function * (t) {\n    let counter = 0;\n    const tableState = {\n      sort: {pointer: 'id', direction: 'desc'},\n      search: {},\n      filter: {},\n      slice: {page: 1, size: 2}\n    };\n    const incrementCounter = () => counter++;\n    const table = tableFactory({\n      tableState\n    });\n    table.on(DISPLAY_CHANGED, incrementCounter);\n    table.on(TOGGLE_SORT, incrementCounter);\n    table.on(PAGE_CHANGED, incrementCounter);\n    table.on(FILTER_CHANGED, incrementCounter);\n    table.on(SEARCH_CHANGED, incrementCounter);\n    table.on(SUMMARY_CHANGED, incrementCounter);\n    table.on(EXEC_CHANGED, incrementCounter);\n    yield table.eval();\n    t.equal(counter, 0, 'counter should not have been updated');\n    t.deepEqual(tableState, {\n      sort: {pointer: 'id', direction: 'desc'},\n      search: {},\n      filter: {},\n      slice: {page: 1, size: 2}\n    }, 'table state should not have changed');\n  })\n  .test('exec should first set the working state to true then false', function * (t) {\n    let workingState;\n    const table = tableFactory({\n      data: [\n        {id: 1, name: 'foo'},\n        {id: 2, name: 'blah'},\n        {id: 3, name: 'bip'}\n      ]\n    });\n    table.on(EXEC_CHANGED, function ({working}) {\n      workingState = working;\n    });\n    table.exec();\n    t.equal(workingState, true);\n    yield wait(25);\n    t.equal(workingState, false);\n  })\n  .test('exec should dispatch the display changed event with the new displayed value', function * (t) {\n    let displayed;\n    const tableState = {\n      sort: {pointer: 'id', direction: 'desc'},\n      search: {},\n      filter: {},\n      slice: {page: 1, size: 2}\n    };\n    const table = tableFactory({\n      data: [\n        {id: 1, name: 'foo'},\n        {id: 2, name: 'blah'},\n        {id: 3, name: 'bip'}\n      ],\n      tableState\n    });\n\n    table.onDisplayChange(val => displayed = val);\n    table.exec();\n    yield wait(25);\n    t.deepEqual(displayed, [\n      {\"index\": 2, \"value\": {\"id\": 3, \"name\": \"bip\"}},\n      {\"index\": 1, \"value\": {\"id\": 2, \"name\": \"blah\"}}\n    ]);\n  })\n  .test('exec should dispatch the summary changed event with the new value', function * (t) {\n    let summary;\n    const tableState = {\n      sort: {pointer: 'id', direction: 'desc'},\n      search: {},\n      filter: {name: [{value: 'b'}]},\n      slice: {page: 1, size: 1}\n    };\n    const table = tableFactory({\n      data: [\n        {id: 1, name: 'foo'},\n        {id: 2, name: 'blah'},\n        {id: 3, name: 'bip'}\n      ],\n      tableState\n    });\n\n    table.on(SUMMARY_CHANGED, val => summary = val);\n    table.exec();\n    yield wait(25);\n    t.deepEqual(summary, {\"page\": 1, \"size\": 1, \"filteredCount\": 2}\n    );\n  });\n","import zora from 'zora';\nimport slice from './slice';\nimport table from './table';\nimport filterDirective from './directives/filter';\nimport searchDirective from './directives/search';\nimport sliceDirective from './directives/slice';\nimport sortDirective from './directives/sort';\nimport summaryDirective from './directives/summary';\nimport wokringIndicatorDirective from './directives/workingIndicator';\nimport tableDirective from './directives/table';\n\nzora()\n  .test(slice)\n  .test(table)\n  .test(filterDirective)\n  .test(searchDirective)\n  .test(sliceDirective)\n  .test(sortDirective)\n  .test(summaryDirective)\n  .test(wokringIndicatorDirective)\n  .test(tableDirective)\n  .run();\n"],"names":["plan","zora","slicer","tap","pointer","sortFactory","sort","table","filter","fakeTable","search","slice","executionListener"],"mappings":"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"}